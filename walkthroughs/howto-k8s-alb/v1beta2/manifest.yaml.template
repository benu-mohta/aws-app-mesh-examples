---
apiVersion: v1
kind: Namespace
metadata:
  name: app-dev
  labels:
    mesh: dev-mesh
    appmesh.k8s.aws/sidecarInjectorWebhook: enabled
---
apiVersion: appmesh.k8s.aws/v1beta2
kind: Mesh
metadata:
  name: dev-mesh
spec:
  namespaceSelector:
    matchLabels:
      mesh: dev-mesh
---
apiVersion: appmesh.k8s.aws/v1beta2
kind: VirtualNode
metadata:
  name: front
  namespace: app-dev
spec:
  podSelector:
    matchLabels:
      app: front
  listeners:
    - portMapping:
        port: 8080
        protocol: http
      healthCheck:
        protocol: http
        path: '/ping'
        healthyThreshold: 2
        unhealthyThreshold: 2
        timeoutMillis: 2000
        intervalMillis: 5000
  backends:
    - virtualService:
        virtualServiceRef:
          name: color
  serviceDiscovery:
    dns:
      hostname: front.app-dev.svc.cluster.local
---
apiVersion: appmesh.k8s.aws/v1beta2
kind: VirtualNode
metadata:
  name: blue
  namespace: app-dev
spec:
  podSelector:
    matchLabels:
      app: color
      version: blue
  listeners:
    - portMapping:
        port: 8080
        protocol: http
      healthCheck:
        protocol: http
        path: '/ping'
        healthyThreshold: 2
        unhealthyThreshold: 2
        timeoutMillis: 2000
        intervalMillis: 5000
  serviceDiscovery:
    dns:
      hostname: color-blue.app-dev.svc.cluster.local
---
apiVersion: appmesh.k8s.aws/v1beta2
kind: VirtualNode
metadata:
  name: green
  namespace: app-dev
spec:
  podSelector:
    matchLabels:
      app: color
      version: green
  listeners:
    - portMapping:
        port: 8080
        protocol: http
      healthCheck:
        protocol: http
        path: '/ping'
        healthyThreshold: 2
        unhealthyThreshold: 2
        timeoutMillis: 2000
        intervalMillis: 5000
  serviceDiscovery:
    dns:
      hostname: color-green.app-dev.svc.cluster.local
---
apiVersion: appmesh.k8s.aws/v1beta2
kind: VirtualService
metadata:
  name: color
  namespace: app-dev
spec:
  awsName: color.app-dev.svc.cluster.local
  provider:
    virtualRouter:
      virtualRouterRef:
        name: color-router

---
apiVersion: appmesh.k8s.aws/v1beta2
kind: VirtualRouter
metadata:
  namespace: app-dev
  name: color-router
spec:
  listeners:
    - portMapping:
        port: 8080
        protocol: http
  routes:
    - name: color-route
      httpRoute:
        match:
          prefix: /
        action:
          weightedTargets:
            - virtualNodeRef:
                name: blue
              weight: 1
            - virtualNodeRef:
                name: green
              weight: 1
---
apiVersion: v1
kind: Service
metadata:
  name: front
  namespace: app-dev
spec:
  type: NodePort
  ports:
    - port: 8080
      protocol: TCP
  selector:
    app: front
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: front
  namespace: app-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: front
  template:
    metadata:
      labels:
        app: front
    spec:
      containers:
        - name: app
          image: 246818788759.dkr.ecr.us-west-2.amazonaws.com/k8infra:front
          ports:
            - name: app-port
              containerPort: 8080
          readinessProbe:
            httpGet:
              path: /ping
              port: app-port
            initialDelaySeconds: 1
            periodSeconds: 5
            failureThreshold: 1
          livenessProbe:
            httpGet:
              path: /ping
              port: app-port
            initialDelaySeconds: 1
            periodSeconds: 5
            failureThreshold: 1
          env:
            - name: "COLOR_HOST"
              value: "color.app-dev.svc.cluster.local:8080"
---
apiVersion: v1
kind: Service
metadata:
  name: color-green
  namespace: app-dev
spec:
  ports:
    - port: 8080
      name: http
  selector:
    app: color
    version: green
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: green
  namespace: app-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: color
      version: green
  template:
    metadata:
      labels:
        app: color
        version: green
    spec:
      containers:
        - name: app
          image: 246818788759.dkr.ecr.us-west-2.amazonaws.com/k8infra:color
          ports:
            - containerPort: 8080
          env:
            - name: "COLOR"
              value: "green"
---
apiVersion: v1
kind: Service
metadata:
  name: color-blue
  namespace: app-dev
spec:
  ports:
    - port: 8080
      name: http
  selector:
    app: color
    version: blue
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: blue
  namespace: app-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: color
      version: blue
  template:
    metadata:
      annotations:
        appmesh.k8s.aws/mesh: dev-mesh
      labels:
        app: color
        version: blue
    spec:
      containers:
        - name: app
          image: 246818788759.dkr.ecr.us-west-2.amazonaws.com/k8infra:color
          ports:
            - containerPort: 8080
          env:
            - name: "COLOR"
              value: "blue"
---
apiVersion: v1
kind: Service
metadata:
  name: color
  namespace: app-dev
spec:
  ports:
    - port: 8080
      name: http
  selector:
    app: color
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata: 
  annotations: 
    alb.ingress.kubernetes.io/scheme: internet-facing
    #kubernetes.io/ingress.class: alb
  name: color
  namespace: app-dev
spec:
  ingressClassName: alb	
  rules:
    - http:
        paths:
        - pathType: Prefix
          path: "/color"
          backend:
            service:
              name: front
              port:
                number: 8080
